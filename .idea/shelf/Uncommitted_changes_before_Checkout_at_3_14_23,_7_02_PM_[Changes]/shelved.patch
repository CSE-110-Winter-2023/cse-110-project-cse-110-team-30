Index: app/src/main/java/com/example/team30/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.team30;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.constraintlayout.helper.widget.CircularFlow;\nimport androidx.constraintlayout.widget.ConstraintLayout;\nimport androidx.core.app.ActivityCompat;\n\nimport android.Manifest;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.content.pm.PackageManager;\nimport android.graphics.Color;\nimport android.graphics.drawable.Drawable;\nimport android.media.Image;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.View;\nimport android.view.ViewTreeObserver;\nimport android.widget.Button;\nimport android.widget.ImageView;\n\nimport com.example.team30.DataCalculators.Compass;\nimport com.example.team30.DataCalculators.LocationService;\nimport com.example.team30.DataCalculators.OrientationService;\nimport com.example.team30.models.API;\nimport com.example.team30.models.Friend;\nimport com.example.team30.models.Location;\n\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\nimport java.util.concurrent.Future;\n\npublic class MainActivity extends AppCompatActivity {\n    private OrientationService orientationService;\n    private LocationService locationService;\n    private ExecutorService backgroundThreadExecutor = Executors.newSingleThreadExecutor();\n    private Future<Void> future;\n    private Compass compass;\n    private CircularFlow flow;\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        // Check for and get location permissions\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED\n                && ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 200);\n        }\n\n        compass = Compass.singleton();\n        SharedPreferences data = getSharedPreferences(\"test\", MODE_PRIVATE);\n        SharedPreferences.Editor editor = data.edit();\n        if(data.getBoolean(\"register\", false) == false){\n            Intent intent = new Intent(MainActivity.this, RegistrationActivity.class);\n            startActivity(intent);\n        }\n        flow = findViewById(R.id.outerCircleFlow);\n        if(data.getBoolean(\"newFriend\", false)){\n            editor.putBoolean(\"newFriend\", false);\n            editor.apply();\n            Location location = (Location) getIntent().getSerializableExtra(\"location\");\n            System.out.println(location.getLatitude()+location.getLongitude()+location.getPublic_code());\n            ImageView dot = makeDot(location);\n            ConstraintLayout constraint = findViewById(R.id.compass);\n            constraint.addView(dot);\n            addDotToView(dot, location);\n        }\n\n    }\n\n    public void addDotToView(ImageView dot, Location l){\n        int radius = 50;\n        float angle = 100;\n        if (flow != null) {\n            if (flow.isLayoutRequested()) {\n                flow.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {\n                    @Override\n                    public void onGlobalLayout() {\n                        flow.addViewToCircularFlow(dot, radius, compass.calculateAngle(l.getLatitude(), l.getLongitude()));\n                        flow.getViewTreeObserver().removeOnGlobalLayoutListener(this);\n                    }\n                });\n            } else {\n                flow.addViewToCircularFlow(dot, radius, angle);\n            }\n        } else {\n            Log.e(\"TAG\", \"CircularFlow view is null!\");\n        }\n    }\n    public void addFriend(View view) {\n        Intent intent = new Intent(MainActivity.this, AddFriendActivity.class);\n        startActivity(intent);\n    }\n\n    private ImageView makeDot(Location location){\n        ImageView dot = new ImageView(this);\n        dot.setImageResource(R.drawable.dot);\n        dot.setId(View.generateViewId());\n        dot.setTag(location.getPublic_code());\n        ConstraintLayout.LayoutParams params = new ConstraintLayout.LayoutParams(\n                ConstraintLayout.LayoutParams.WRAP_CONTENT,\n                ConstraintLayout.LayoutParams.WRAP_CONTENT\n        );\n        params.dimensionRatio = \"1:1\";\n        params.height = 25;\n        params.width = 25;\n        dot.setLayoutParams(params);\n        return dot;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/team30/MainActivity.java b/app/src/main/java/com/example/team30/MainActivity.java
--- a/app/src/main/java/com/example/team30/MainActivity.java	(revision 088b2e1eb5fc1f859b1a5f919e61317563216846)
+++ b/app/src/main/java/com/example/team30/MainActivity.java	(date 1678742413878)
@@ -70,7 +70,7 @@
     }
 
     public void addDotToView(ImageView dot, Location l){
-        int radius = 50;
+        int radius = 100;
         float angle = 100;
         if (flow != null) {
             if (flow.isLayoutRequested()) {
